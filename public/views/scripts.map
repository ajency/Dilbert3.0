{"version":3,"sources":["webpack:///scripts.7c0f08735614d1e959f0.bundle.js","webpack:////home/ajency/Documents/angular2/Dilbert3.0/~/script-loader/addScript.js","webpack:////home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/bootstrap-customisation.js?3252","webpack:////home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/frontend.js?5e20","webpack:////home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/bootstrap-customisation.js","webpack:////home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/frontend.js"],"names":["webpackJsonp","347","module","exports","src","execScript","eval","call","352","__webpack_require__","353","629","630","663"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,IACA,SAASC,EAAQC,GCCvBD,EAAAC,QAAA,SAAAC,GACA,mBAAAC,YACAA,WAAAD,GAEAE,KAAAC,KAAA,KAAAH,KDWMI,IACA,SAASN,EAAQC,EAASM,GEpBhCA,EAAA,KAAAA,EAAA,OF0BMC,IACA,SAASR,EAAQC,EAASM,GG3BhCA,EAAA,KAAAA,EAAA,OHiCME,IACA,SAAST,EAAQC,GIlCvBD,EAAAC,QAAA,09FJwCMS,IACA,SAASV,EAAQC,GKzCvBD,EAAAC,QAAA,krJL+CMU,IACA,SAASX,EAAQC,EAASM,GAEhCA,EAAoB,KACpBP,EAAOC,QAAUM,EAAoB,QAKlC","file":"scripts.7c0f08735614d1e959f0.bundle.js","sourcesContent":["webpackJsonp([2,3],{\n\n/***/ 347:\n/***/ function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n/***/ },\n\n/***/ 352:\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(347)(__webpack_require__(629))\n\n/***/ },\n\n/***/ 353:\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(347)(__webpack_require__(630))\n\n/***/ },\n\n/***/ 629:\n/***/ function(module, exports) {\n\nmodule.exports = \"$(document).ready(function() {\\n\\n\\t$('body').on('click', '.last-week', function() {\\n\\t\\tif (!$(this).hasClass('monday-card')) {\\n\\t\\t\\tif ($(this).hasClass('opened')) {\\n\\t\\t\\t\\t$(this).removeClass('opened').addClass('closed');\\n\\t\\t\\t\\t$(this).find('.card-progress').animate({width: 0}, 500)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$(this).addClass('opened').removeClass('closed');\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t$totalWeekdays = $(this).find('.card-progress').attr('data-weekdays');\\n\\t\\t\\t\\t//$weekdaysDone = $(this).find('.listy').length; // Get Number of records that week\\n\\t\\t\\t\\t$weekdaysLeave = $('.last-week').find('.listy').find('.show-opened');\\n\\t\\t\\t\\t$weekdaysDone = $weekdaysLeave.length; // Get Number of records that week\\n\\t\\t\\t\\t$leavetaken = 0;\\n\\n\\t\\t\\t\\t$leaveKeyWorkList = [\\\"Absent\\\", \\\"Leave\\\"]; // Leave Key word list -> This list can later be upgraded to AJAX call to remain up-to-date\\n\\n\\t\\t\\t\\t// $weekdaysDone.each(function(index) {\\n\\t\\t\\t\\tfor (var index = 0; index < $weekdaysLeave.length; index++) { // Made it Synchronous\\n\\t\\t\\t\\t\\tif ($weekdaysLeave != undefined && $weekdaysLeave[index].outerHTML.search('Status') != -1){\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// If not -1, then there exist Status key word & Status keyword is only used for leave\\n\\t\\t\\t\\t\\t\\tfor(var i = 0; i < $leaveKeyWorkList.length; i++) { // checks if it is matching the list\\n\\t\\t\\t\\t\\t\\t\\tif($weekdaysLeave[index].outerHTML.search($leaveKeyWorkList[i]) != -1) {\\n\\t\\t\\t\\t\\t\\t\\t\\t$leavetaken += 1;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t$eachDay = 100 / $totalWeekdays;\\n\\t\\t\\t\\t$percentToday = $eachDay * ($weekdaysDone - $leavetaken);\\n\\t\\t\\t\\tif($percentToday > 100) { // Saturday is not a working day - hence some request to Work on Sat, else Mon-Fri is considered working hence if progress is greater than 100%, then set it back to 100%\\n\\t\\t\\t\\t\\t$percentToday = 100;\\n\\t\\t\\t\\t} \\n\\t\\t\\t\\t$(this).find('.card-progress').attr('data-width', $percentToday);\\n\\n\\t\\t\\t\\t$wid = $(this).find('.card-progress').attr('data-width') + '%';\\n\\t\\t\\t\\t$(this).find('.card-progress').show().animate({width: $wid}, 500)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\n\\tif (!$('.navbar-toggle').length) {\\n\\t\\tif (!$('.navbar-toggle').hasClass('collapsed')) {\\n\\t\\t\\t// menu is open - will be closed\\n\\t\\t\\tif (!$('.menu-overlay').length) {\\n\\t\\t\\t\\t$('.navbar-collapse').before('<div class=\\\"menu-overlay\\\"></div>');\\n\\t\\t\\t}\\n\\t\\t\\t$('.menu-overlay').fadeIn('slow');\\n\\t\\t}\\n\\t}\\n\\n\\t$(document).on('click', '.navbar-toggle', function() {\\n\\t\\tif (!$(this).hasClass('collapsed')) {\\n\\t\\t\\t// menu is open - will be closed\\n\\t\\t\\tif (!$('.menu-overlay').length) {\\n\\t\\t\\t\\t$('.navbar-collapse').before('<div class=\\\"menu-overlay\\\"></div>');\\n\\t\\t\\t}\\n\\t\\t\\t$('.menu-overlay').fadeIn('slow');\\n\\t\\t} else {\\n\\t\\t\\t// menu is closed - will be opened\\n\\t\\t}\\n\\t});\\n\\t$(document).on('click', '.menu-overlay', function() {\\n\\t\\t$('.navbar-toggle').addClass('collapsed');\\n\\t\\t$('.navbar-collapse').removeClass('in');\\n\\t\\t$(this).fadeOut('slow');\\n\\t});\\n});\"\n\n/***/ },\n\n/***/ 630:\n/***/ function(module, exports) {\n\nmodule.exports = \"$(document).ready(function() {\\n\\t// sets the min height for the content wrapper so that the footer bar doesn't stick to the middle of the screen\\n\\t$minheightreq = $(window).height() - ($('footer.footer').height() * 2) - $('.navbar.header').outerHeight() - 30;\\n\\t$('.content-wrapper').css('min-height', $minheightreq);\\n\\n\\tfunction checkifpositive(count) {\\n\\t\\tif (count > 0) {\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\n\\t\\n\\n\\t// for the tables in the dashboard\\n\\tif ($('.hscroll-table').length) {\\n\\t\\t$('.hscroll-table').each(function() {\\n\\t\\t\\t$headerCol = $(this).find('thead th:last-child').html();\\n\\t\\t\\t$(this).find('thead th:last-child').detach();\\n\\t\\t\\t$bodyCol = [];\\n\\t\\t\\t$(this).find('tbody tr').each(function() {\\n\\t\\t\\t\\t$singleCell = $(this).find('td:last-child').html();\\n\\t\\t\\t\\t$(this).find('td:last-child').detach();\\n\\t\\t\\t\\t$bodyCol.push($singleCell);\\n\\t\\t\\t});\\n\\n\\t\\t\\tif ($(this).children().first().is('table')) {\\n\\t\\t\\t\\t$contElement = $(this);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$contElement = $(this).children().first();\\n\\t\\t\\t}\\n\\n\\t\\t\\t$contElement.append(\\n\\t\\t\\t\\t'<table class=\\\"table fixed-right\\\">' +\\n\\t\\t\\t\\t\\t'<thead><tr><th>' + $headerCol + '</th></tr></thead><tbody></tbody>' +\\n\\t\\t\\t\\t'</table>'\\n\\t\\t\\t);\\n\\t\\t\\tfor (var i = 0; i < $bodyCol.length; i++) {\\n\\t\\t\\t\\t$contElement.find('.fixed-right').append(\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td>' + $bodyCol[i] + '</td>' +\\n\\t\\t\\t\\t\\t'</tr>'\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\n\\t$('[data-toggle=\\\"tooltip\\\"]').tooltip()\\n\\t// commented section is used when there is idle and work times\\n\\t// $('.table-view.month [data-toggle=\\\"tooltip\\\"]').each(function() {\\n\\t// \\t$day = $(this).find('.th-day').text().trim();\\n\\t// \\t$totalTime = $(this).find('.th-total').text().trim();\\n\\t// \\t$workTime = $(this).find('.th-work').text().trim();\\n\\t// \\t$breakTime = $(this).find('.th-break').text().trim();\\n\\t// \\t$(this).attr('data-original-title',\\n\\t// \\t\\t'<div class=\\\"month-days\\\">' +\\n\\t// \\t\\t\\t'<div class=\\\"month-date\\\">' + $day + '</div>' +\\n\\t// \\t\\t\\t'<div class=\\\"month month-total\\\"><span class=\\\"j-t\\\">Total time</span><strong class=\\\"pull-right\\\">' + $totalTime + ' <small>hrs</small></strong></div>' +\\n\\t// \\t\\t\\t'<div class=\\\"month month-work\\\"><span class=\\\"j-t\\\">Work Time</span><strong class=\\\"pull-right\\\">' + $workTime + ' <small>hrs</small></strong></div>' +\\n\\t// \\t\\t\\t'<div class=\\\"month month-break\\\"><span class=\\\"j-t\\\">Break Time</span><strong class=\\\"pull-right\\\">' + $breakTime + ' <small>hrs</small></strong></div>' +\\n\\t// \\t\\t'</div>'\\n\\t// \\t);\\n\\t// });\\n\\t$('.table-view.month .single-day').each(function() {\\n\\t\\tif ($(this).hasClass('total')) {\\n\\t\\t\\t$startText = 'Avg. Start Time';\\n\\t\\t\\t$endText = 'Avg. End Time';\\n\\t\\t} else {\\n\\t\\t\\t$startText = 'Start Time';\\n\\t\\t\\t$endText = 'End Time';\\n\\t\\t}\\n\\t\\tif (!$(this).parents().hasClass('company-summary')) {\\n\\t\\t\\t$day = $(this).find('.th-day').text().trim();\\n\\t\\t\\t$totalTime = $(this).find('.th-total').text().trim();\\n\\t\\t\\t$startTime = $(this).find('.th-work').text().trim();\\n\\t\\t\\t$endTime = $(this).find('.th-break').text().trim();\\n\\t\\t\\t$(this).attr('data-original-title',\\n\\t\\t\\t\\t'<div class=\\\"month-days\\\">' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month-date\\\">' + $day + '</div>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month month-total\\\"><span class=\\\"j-t\\\">Total time</span><strong class=\\\"pull-right\\\">' + $totalTime + ' <small>hrs</small></strong></div>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month month-work\\\"><span class=\\\"j-t\\\">' + $startText + '</span><strong class=\\\"pull-right\\\">' + $startTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month month-break\\\"><span class=\\\"j-t\\\">' + $endText + '</span><strong class=\\\"pull-right\\\">' + $endTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t'</div>'\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\t$totalTime = $(this).find('.th-total').text().trim();\\n\\t\\t\\t$startTime = $(this).find('.th-work').text().trim();\\n\\t\\t\\t$endTime = $(this).find('.th-break').text().trim();\\n\\t\\t\\t$(this).attr('data-original-title',\\n\\t\\t\\t\\t\\t'<div class=\\\"month-days\\\">' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"month month-total\\\"><span class=\\\"j-t\\\">Total time</span><strong class=\\\"pull-right\\\">' + $totalTime + ' <small>hrs</small></strong></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"month month-work\\\"><span class=\\\"j-t\\\">' + $startText + '</span><strong class=\\\"pull-right\\\">' + $startTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"month month-break\\\"><span class=\\\"j-t\\\">' + $endText + '</span><strong class=\\\"pull-right\\\">' + $endTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t\\t'</div>'\\n\\t\\t\\t\\t);\\n\\t\\t}\\n\\t});\\n\\n\\n\\t$(document).on('click', '.stay-open.dropdown-menu', function (e) {\\n\\t\\te.stopPropagation();\\n\\t});\\n});\"\n\n/***/ },\n\n/***/ 663:\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(352);\nmodule.exports = __webpack_require__(353);\n\n\n/***/ }\n\n},[663]);\n\n\n// WEBPACK FOOTER //\n// scripts.7c0f08735614d1e959f0.bundle.js","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ajency/Documents/angular2/Dilbert3.0/~/script-loader/addScript.js\n// module id = 347\n// module chunks = 2","require(\"!!/home/ajency/Documents/angular2/Dilbert3.0/node_modules/script-loader/addScript.js\")(require(\"!!/home/ajency/Documents/angular2/Dilbert3.0/node_modules/raw-loader/index.js!/home/ajency/Documents/angular2/Dilbert3.0/node_modules/source-map-loader/index.js!/home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/bootstrap-customisation.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/bootstrap-customisation.js\n// module id = 352\n// module chunks = 2","require(\"!!/home/ajency/Documents/angular2/Dilbert3.0/node_modules/script-loader/addScript.js\")(require(\"!!/home/ajency/Documents/angular2/Dilbert3.0/node_modules/raw-loader/index.js!/home/ajency/Documents/angular2/Dilbert3.0/node_modules/source-map-loader/index.js!/home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/frontend.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/frontend.js\n// module id = 353\n// module chunks = 2","module.exports = \"$(document).ready(function() {\\n\\n\\t$('body').on('click', '.last-week', function() {\\n\\t\\tif (!$(this).hasClass('monday-card')) {\\n\\t\\t\\tif ($(this).hasClass('opened')) {\\n\\t\\t\\t\\t$(this).removeClass('opened').addClass('closed');\\n\\t\\t\\t\\t$(this).find('.card-progress').animate({width: 0}, 500)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$(this).addClass('opened').removeClass('closed');\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t$totalWeekdays = $(this).find('.card-progress').attr('data-weekdays');\\n\\t\\t\\t\\t//$weekdaysDone = $(this).find('.listy').length; // Get Number of records that week\\n\\t\\t\\t\\t$weekdaysLeave = $('.last-week').find('.listy').find('.show-opened');\\n\\t\\t\\t\\t$weekdaysDone = $weekdaysLeave.length; // Get Number of records that week\\n\\t\\t\\t\\t$leavetaken = 0;\\n\\n\\t\\t\\t\\t$leaveKeyWorkList = [\\\"Absent\\\", \\\"Leave\\\"]; // Leave Key word list -> This list can later be upgraded to AJAX call to remain up-to-date\\n\\n\\t\\t\\t\\t// $weekdaysDone.each(function(index) {\\n\\t\\t\\t\\tfor (var index = 0; index < $weekdaysLeave.length; index++) { // Made it Synchronous\\n\\t\\t\\t\\t\\tif ($weekdaysLeave != undefined && $weekdaysLeave[index].outerHTML.search('Status') != -1){\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// If not -1, then there exist Status key word & Status keyword is only used for leave\\n\\t\\t\\t\\t\\t\\tfor(var i = 0; i < $leaveKeyWorkList.length; i++) { // checks if it is matching the list\\n\\t\\t\\t\\t\\t\\t\\tif($weekdaysLeave[index].outerHTML.search($leaveKeyWorkList[i]) != -1) {\\n\\t\\t\\t\\t\\t\\t\\t\\t$leavetaken += 1;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t$eachDay = 100 / $totalWeekdays;\\n\\t\\t\\t\\t$percentToday = $eachDay * ($weekdaysDone - $leavetaken);\\n\\t\\t\\t\\tif($percentToday > 100) { // Saturday is not a working day - hence some request to Work on Sat, else Mon-Fri is considered working hence if progress is greater than 100%, then set it back to 100%\\n\\t\\t\\t\\t\\t$percentToday = 100;\\n\\t\\t\\t\\t} \\n\\t\\t\\t\\t$(this).find('.card-progress').attr('data-width', $percentToday);\\n\\n\\t\\t\\t\\t$wid = $(this).find('.card-progress').attr('data-width') + '%';\\n\\t\\t\\t\\t$(this).find('.card-progress').show().animate({width: $wid}, 500)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\n\\tif (!$('.navbar-toggle').length) {\\n\\t\\tif (!$('.navbar-toggle').hasClass('collapsed')) {\\n\\t\\t\\t// menu is open - will be closed\\n\\t\\t\\tif (!$('.menu-overlay').length) {\\n\\t\\t\\t\\t$('.navbar-collapse').before('<div class=\\\"menu-overlay\\\"></div>');\\n\\t\\t\\t}\\n\\t\\t\\t$('.menu-overlay').fadeIn('slow');\\n\\t\\t}\\n\\t}\\n\\n\\t$(document).on('click', '.navbar-toggle', function() {\\n\\t\\tif (!$(this).hasClass('collapsed')) {\\n\\t\\t\\t// menu is open - will be closed\\n\\t\\t\\tif (!$('.menu-overlay').length) {\\n\\t\\t\\t\\t$('.navbar-collapse').before('<div class=\\\"menu-overlay\\\"></div>');\\n\\t\\t\\t}\\n\\t\\t\\t$('.menu-overlay').fadeIn('slow');\\n\\t\\t} else {\\n\\t\\t\\t// menu is closed - will be opened\\n\\t\\t}\\n\\t});\\n\\t$(document).on('click', '.menu-overlay', function() {\\n\\t\\t$('.navbar-toggle').addClass('collapsed');\\n\\t\\t$('.navbar-collapse').removeClass('in');\\n\\t\\t$(this).fadeOut('slow');\\n\\t});\\n});\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ajency/Documents/angular2/Dilbert3.0/~/raw-loader!/home/ajency/Documents/angular2/Dilbert3.0/~/source-map-loader!/home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/bootstrap-customisation.js\n// module id = 629\n// module chunks = 2","module.exports = \"$(document).ready(function() {\\n\\t// sets the min height for the content wrapper so that the footer bar doesn't stick to the middle of the screen\\n\\t$minheightreq = $(window).height() - ($('footer.footer').height() * 2) - $('.navbar.header').outerHeight() - 30;\\n\\t$('.content-wrapper').css('min-height', $minheightreq);\\n\\n\\tfunction checkifpositive(count) {\\n\\t\\tif (count > 0) {\\n\\t\\t\\treturn true;\\n\\t\\t} else {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\n\\t\\n\\n\\t// for the tables in the dashboard\\n\\tif ($('.hscroll-table').length) {\\n\\t\\t$('.hscroll-table').each(function() {\\n\\t\\t\\t$headerCol = $(this).find('thead th:last-child').html();\\n\\t\\t\\t$(this).find('thead th:last-child').detach();\\n\\t\\t\\t$bodyCol = [];\\n\\t\\t\\t$(this).find('tbody tr').each(function() {\\n\\t\\t\\t\\t$singleCell = $(this).find('td:last-child').html();\\n\\t\\t\\t\\t$(this).find('td:last-child').detach();\\n\\t\\t\\t\\t$bodyCol.push($singleCell);\\n\\t\\t\\t});\\n\\n\\t\\t\\tif ($(this).children().first().is('table')) {\\n\\t\\t\\t\\t$contElement = $(this);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$contElement = $(this).children().first();\\n\\t\\t\\t}\\n\\n\\t\\t\\t$contElement.append(\\n\\t\\t\\t\\t'<table class=\\\"table fixed-right\\\">' +\\n\\t\\t\\t\\t\\t'<thead><tr><th>' + $headerCol + '</th></tr></thead><tbody></tbody>' +\\n\\t\\t\\t\\t'</table>'\\n\\t\\t\\t);\\n\\t\\t\\tfor (var i = 0; i < $bodyCol.length; i++) {\\n\\t\\t\\t\\t$contElement.find('.fixed-right').append(\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td>' + $bodyCol[i] + '</td>' +\\n\\t\\t\\t\\t\\t'</tr>'\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\n\\t$('[data-toggle=\\\"tooltip\\\"]').tooltip()\\n\\t// commented section is used when there is idle and work times\\n\\t// $('.table-view.month [data-toggle=\\\"tooltip\\\"]').each(function() {\\n\\t// \\t$day = $(this).find('.th-day').text().trim();\\n\\t// \\t$totalTime = $(this).find('.th-total').text().trim();\\n\\t// \\t$workTime = $(this).find('.th-work').text().trim();\\n\\t// \\t$breakTime = $(this).find('.th-break').text().trim();\\n\\t// \\t$(this).attr('data-original-title',\\n\\t// \\t\\t'<div class=\\\"month-days\\\">' +\\n\\t// \\t\\t\\t'<div class=\\\"month-date\\\">' + $day + '</div>' +\\n\\t// \\t\\t\\t'<div class=\\\"month month-total\\\"><span class=\\\"j-t\\\">Total time</span><strong class=\\\"pull-right\\\">' + $totalTime + ' <small>hrs</small></strong></div>' +\\n\\t// \\t\\t\\t'<div class=\\\"month month-work\\\"><span class=\\\"j-t\\\">Work Time</span><strong class=\\\"pull-right\\\">' + $workTime + ' <small>hrs</small></strong></div>' +\\n\\t// \\t\\t\\t'<div class=\\\"month month-break\\\"><span class=\\\"j-t\\\">Break Time</span><strong class=\\\"pull-right\\\">' + $breakTime + ' <small>hrs</small></strong></div>' +\\n\\t// \\t\\t'</div>'\\n\\t// \\t);\\n\\t// });\\n\\t$('.table-view.month .single-day').each(function() {\\n\\t\\tif ($(this).hasClass('total')) {\\n\\t\\t\\t$startText = 'Avg. Start Time';\\n\\t\\t\\t$endText = 'Avg. End Time';\\n\\t\\t} else {\\n\\t\\t\\t$startText = 'Start Time';\\n\\t\\t\\t$endText = 'End Time';\\n\\t\\t}\\n\\t\\tif (!$(this).parents().hasClass('company-summary')) {\\n\\t\\t\\t$day = $(this).find('.th-day').text().trim();\\n\\t\\t\\t$totalTime = $(this).find('.th-total').text().trim();\\n\\t\\t\\t$startTime = $(this).find('.th-work').text().trim();\\n\\t\\t\\t$endTime = $(this).find('.th-break').text().trim();\\n\\t\\t\\t$(this).attr('data-original-title',\\n\\t\\t\\t\\t'<div class=\\\"month-days\\\">' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month-date\\\">' + $day + '</div>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month month-total\\\"><span class=\\\"j-t\\\">Total time</span><strong class=\\\"pull-right\\\">' + $totalTime + ' <small>hrs</small></strong></div>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month month-work\\\"><span class=\\\"j-t\\\">' + $startText + '</span><strong class=\\\"pull-right\\\">' + $startTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"month month-break\\\"><span class=\\\"j-t\\\">' + $endText + '</span><strong class=\\\"pull-right\\\">' + $endTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t'</div>'\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\t$totalTime = $(this).find('.th-total').text().trim();\\n\\t\\t\\t$startTime = $(this).find('.th-work').text().trim();\\n\\t\\t\\t$endTime = $(this).find('.th-break').text().trim();\\n\\t\\t\\t$(this).attr('data-original-title',\\n\\t\\t\\t\\t\\t'<div class=\\\"month-days\\\">' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"month month-total\\\"><span class=\\\"j-t\\\">Total time</span><strong class=\\\"pull-right\\\">' + $totalTime + ' <small>hrs</small></strong></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"month month-work\\\"><span class=\\\"j-t\\\">' + $startText + '</span><strong class=\\\"pull-right\\\">' + $startTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"month month-break\\\"><span class=\\\"j-t\\\">' + $endText + '</span><strong class=\\\"pull-right\\\">' + $endTime + ' <small></small></strong></div>' +\\n\\t\\t\\t\\t\\t'</div>'\\n\\t\\t\\t\\t);\\n\\t\\t}\\n\\t});\\n\\n\\n\\t$(document).on('click', '.stay-open.dropdown-menu', function (e) {\\n\\t\\te.stopPropagation();\\n\\t});\\n});\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ajency/Documents/angular2/Dilbert3.0/~/raw-loader!/home/ajency/Documents/angular2/Dilbert3.0/~/source-map-loader!/home/ajency/Documents/angular2/Dilbert3.0/src/assets/js/frontend.js\n// module id = 630\n// module chunks = 2"],"sourceRoot":""}